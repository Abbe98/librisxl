import org.gradle.api.plugins.jetty.JettyRun

repositories {
    mavenCentral()
    maven { url "http://repository.codehaus.org/" }
    flatDir name: 'localWhelk-webapiDir', dirs: '../lib'
}

task devLogging(dependsOn: 'classes', type: Copy) {
    copy {
        from('../etc')
        include('logback_dev.xml')
        rename('logback_dev.xml','logback.xml')
        into "build/resources/main"
    }
}

task jettyRun(dependsOn: 'devLogging', type: JettyRun, overwrite: true) {
    //jettyRun.contextPath = '/'
    jettyRun.description = "Starts a jetty instance. (USAGE: -Delastic.host='<host>' -Delastic.cluster='[cluster]')\nTo use a specific json-file to configure whelks, use -Dwhelk.config.uri=<URI of json file> (example: -Dwhelk.config.uri='file:etc/whelks.json')"

    def mock_config = "file:etc/mock_whelks.json"
    def mock_cluster = java.net.InetAddress.getLocalHost().getHostName() + "-es-cluster"
    def mock_c_cluster = java.net.InetAddress.getLocalHost().getHostName() + "-c-cluster"
    System.setProperty('file.encoding', System.getProperty('file.encoding', "UTF-8"))
    System.setProperty('whelk.config.uri', System.getProperty("whelk.config.uri", mock_config))
    System.setProperty('cassandra.host', System.getProperty('cassandra.host', "localhost"))
    System.setProperty('cassandra.cluster', System.getProperty('cassandra.cluster', mock_c_cluster))
    System.setProperty('elastic.cluster', System.getProperty("elastic.cluster", mock_cluster))
    System.setProperty('elastic.host', System.getProperty("elastic.host", ""))
}
